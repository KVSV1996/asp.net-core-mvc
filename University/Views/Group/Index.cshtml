@model PaginatedList<University.Models.Group>

@{
    ViewData["Title"] = "Index";
}

<h1>Groups</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Group" asp-action="Index">
    <p>
        Group name: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <h4>Groups Name</h4>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-controller="Student" asp-action="Index"asp-route-id="@item.GroupId">@Html.DisplayFor(modelItem => item.GroupName)</a>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.GroupId">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.GroupId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
